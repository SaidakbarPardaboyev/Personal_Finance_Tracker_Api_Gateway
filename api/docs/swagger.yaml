basePath: /
definitions:
  models.ChangePassword:
    properties:
      current_password:
        type: string
      new_password:
        type: string
    type: object
  models.ChangeUserRole:
    properties:
      new_user_role:
        type: string
    type: object
  models.ForgotPasswordReq:
    properties:
      email:
        type: string
    type: object
  models.RequestLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.RequestRegister:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    type: object
  models.ResetPasswordReq:
    properties:
      new_password:
        type: string
      verification_code:
        type: string
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statisCode:
        type: integer
    type: object
  models.UpdateUser:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    type: object
info:
  contact:
    url: http://www.support_me_with_smile
  description: Something big
  title: LinguaLeap
  version: "1.0"
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: it is used when user forgot password
      parameters:
      - description: forgot_password
        in: body
        name: forgot_password
        required: true
        schema:
          $ref: '#/definitions/models.ForgotPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: this API for login new user
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.RequestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      tags:
      - Auth
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      description: this API for refresh user access token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: this API for register new user
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.RequestRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      tags:
      - Auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: this API for reset user password
      parameters:
      - description: reset-password
        in: body
        name: reset-password
        required: true
        schema:
          $ref: '#/definitions/models.ResetPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      tags:
      - Auth
  /users/{user_id}:
    delete:
      consumes:
      - application/json
      description: deleting user by user id
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete User
    get:
      consumes:
      - application/json
      description: getting user profile by user id
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get User Profile by id
  /users/all:
    get:
      consumes:
      - application/json
      description: getting all user
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: full_name
        in: query
        name: full_name
        type: string
      - description: email
        in: query
        name: email
        type: string
      - description: user_role
        in: query
        name: user_role
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get All User
  /users/password:
    put:
      consumes:
      - application/json
      description: changing user password
      parameters:
      - description: change_password
        in: body
        name: change_password
        required: true
        schema:
          $ref: '#/definitions/models.ChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Change User Password
  /users/profile:
    get:
      consumes:
      - application/json
      description: getting user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get User Profile
  /users/update:
    put:
      consumes:
      - application/json
      description: updating user profile
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update User Profile
  /users/user_role/{user_id}:
    put:
      consumes:
      - application/json
      description: changing user Role
      parameters:
      - description: change_user_role
        in: body
        name: change_user_role
        required: true
        schema:
          $ref: '#/definitions/models.ChangeUserRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Change User Role
swagger: "2.0"
